function     [  QuaSOR_Parameters,...
                QuaSOR_Map_Settings,....
                PixelMax_Map_Settings,...
                QuaSOR_LowRes_Map_Settings,...
                QuaSOR_Auto_AZ_Settings,...
                QuaSOR_Event_Extraction_Settings,...
                ScaleBar_Upscale]=...
                Multi_Modality_QuaSOR_Setup(myPool,OS,dc,SaveName,StackSaveName,...
                ScratchDir,CurrentScratchDir,ImagingInfo,ScaleBar,SplitEpisodeFiles,AllBoutonsRegion,...
                QuaSOR_Parameters,...
                QuaSOR_Map_Settings,...
                PixelMax_Map_Settings,...
                QuaSOR_LowRes_Map_Settings,...
                QuaSOR_Auto_AZ_Settings,...
                QuaSOR_Event_Extraction_Settings,...
                Default_QuaSOR_Parameter_List,...
                GlobalDefault_QuaSOR_Parameters,...
                Default_QuaSOR_Parameters,...
                Default_PixelMax_Map_Settings,...
                Default_QuaSOR_LowRes_Map_Settings,...
                Default_QuaSOR_Map_Settings,...
                Default_QuaSOR_Auto_AZ_Settings,...
                Default_QuaSOR_Event_Extraction_Settings)

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    close all
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    SettingUpQuaSOR=1;
    ImportChoice = questdlg({['Currently Setting Up: ',StackSaveName];...
        'Do you want to import settings from another file?';...
        'You can also do a Import ONLY where you skip all setting adjustments';...
        'However this is NOT recommended';...
        'When Importing Make sure you match protocol!'},...
        'Import QuaSOR Settings?','Import and Check','Import ONLY','Define','Define');
    if strcmp(ImportChoice,'Import and Check')
        SettingUpQuaSOR=1;
        ImportSettings=1;
    elseif strcmp(ImportChoice,'Import ONLY')
        SettingUpQuaSOR=0;
        ImportSettings=1;
    elseif strcmp(ImportChoice,'Define')
        SettingUpQuaSOR=1;
        ImportSettings=0;
    else
        SettingUpQuaSOR=1;
        ImportSettings=0;
    end
    if ImportSettings
        TempCurrentDir=cd;
        [TempParentDir, ~] = fileparts(TempCurrentDir);
        cd(TempParentDir);

        FileSuffix='_QuaSOR_Data.mat';
        [LoadingFile, LoadingDir, ~] = uigetfile( ...
        {   '*_QuaSOR_Data.mat','_QuaSOR_Data.mat';...
           }, ...
           ['Pick _QuaSOR_Data.mat File for parameters to import for: ',StackSaveName]);
        LoadingStackSaveName=LoadingFile(1:length(LoadingFile)-length(FileSuffix));
        FileSuffix='_QuaSOR_Data.mat';
        fprintf(['Loading... ',LoadingStackSaveName,FileSuffix,'...']);
        load([LoadingDir,dc,LoadingStackSaveName,FileSuffix],'QuaSOR_Parameters','QuaSOR_Event_Extraction_Settings')
        fprintf('Finished!\n')
        %%%%%%%
        FileSuffix='_QuaSOR_Maps.mat';
        fprintf(['Loading... ',LoadingStackSaveName,FileSuffix,'...']);
        load([LoadingDir,dc,LoadingStackSaveName,FileSuffix],'QuaSOR_Map_Settings','QuaSOR_LowRes_Map_Settings','PixelMax_Map_Settings')
        fprintf('Finished!\n')
        %%%%%%%
        FileSuffix='_QuaSOR_AZs.mat';
        fprintf(['Loading... ',LoadingStackSaveName,FileSuffix,'...']);
        load([LoadingDir,dc,LoadingStackSaveName,FileSuffix],'QuaSOR_Auto_AZ_Settings')
        fprintf('Finished!\n')
        clear LoadingDir LoadingStackSaveName LoadingFile
        
        cd(TempCurrentDir)
        clear TempCurrentDir TempParentDir
    end
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    while SettingUpQuaSOR
        ModeChoice = questdlg('QuaSOR Setup Mode?','QuaSOR Setup Mode?','Hints ON','Hints OFF','Hints OFF');
        if strcmp(ModeChoice,'Hints OFF')
            TutorialNotes=0;
        elseif strcmp(ModeChoice,'Hints ON')
            TutorialNotes=1;
        end
        OverwriteAllChoice = questdlg('Do you want to overwrite ALL Parameters with defaults if they exist??','Overwrite ALL Parameters with Defaults?','Overwrite','Choose','Choose');
        if strcmp(OverwriteAllChoice,'Overwrite')
            OverwriteAllDefault='Overwrite';
        elseif strcmp(OverwriteAllChoice,'Choose')
            OverwriteAllDefault='Skip';
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        if ~exist('QuaSOR_Parameters')
            QuaSOR_Parameters=[];
            Previous_QuaSOR_Parameters=0;
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        if ~isempty(QuaSOR_Parameters)
            Previous_QuaSOR_Parameters=1;
            ForceDefaultUpdateChoice = questdlg('QuaSOR_Parameters exist, Do you want to overwrite with defaults??','Overwrite QuaSOR_Parameters?','Overwrite','Skip',OverwriteAllDefault);
            if strcmp(ForceDefaultUpdateChoice,'Overwrite')
                ForceDefaultUpdate=1;
            elseif strcmp(ForceDefaultUpdateChoice,'Skip')
                ForceDefaultUpdate=0;
            end
        else
            ForceDefaultUpdate=1;
        end
        if ForceDefaultUpdate
            [QuaSOR_Default_Choice, checking] = listdlg('PromptString',...
                {'Default QuaSOR Parameters:';StackSaveName},'SelectionMode','single',...
                'ListString',Default_QuaSOR_Parameter_List,'ListSize', [600 600]);
            QuaSOR_Parameters.Modality=GlobalDefault_QuaSOR_Parameters.Modality;
            QuaSOR_Parameters.QuaSOR_Mode=GlobalDefault_QuaSOR_Parameters.QuaSOR_Mode;
            QuaSOR_Parameters.General=GlobalDefault_QuaSOR_Parameters.General; 
            QuaSOR_Parameters.UpScaling=GlobalDefault_QuaSOR_Parameters.UpScaling;
            QuaSOR_Parameters.Display=GlobalDefault_QuaSOR_Parameters.Display;
            QuaSOR_Parameters.ParameterSet_Name=Default_QuaSOR_Parameters(QuaSOR_Default_Choice).ParameterSet_Name;
            QuaSOR_Parameters.Region=Default_QuaSOR_Parameters(QuaSOR_Default_Choice).Region;
            QuaSOR_Parameters.Components=Default_QuaSOR_Parameters(QuaSOR_Default_Choice).Components;
            QuaSOR_Parameters.GMM=Default_QuaSOR_Parameters(QuaSOR_Default_Choice).GMM;
            QuaSOR_Parameters.Dist_Weights=Default_QuaSOR_Parameters(QuaSOR_Default_Choice).Dist_Weights;
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        %General
        if TutorialNotes
            Instructions={'General Settings';...
                'QuaSOR_Mode: Only mode 2 is available at momeent';...
                'StoreAllFitTests: probably not recommended as it takes a ton of space';...
                'SaveStacks: NOT currently used';...
                'Reconstruct_Upscale_Fit_Stack: these are also huge so leave off unless you need to generate the fit function XYT stack';...
                'DisplayOn: for fastest fitting leave off, to see results as the processing happens turn on, though not sure completely works at moment';...
                'DisplayFinal: also probably leave off, will make maps in separate step now';...
                'DisplayRegionTracking: may not work but if does, useful for optimizing the Region settings';...
                'SaveIntermediates: Probably not needed anymore, stores intermediate files in .mat in case of crash';...
                'MinimizeFigureWindow: only used if display on but again leave off currently';...
                'MemorySaver: Saves space by downconverting fitting data from double to single';...
                'EventThreshold: Automatically engages MemorySaver if there are more than this number of events to save space';...
                'GBThreshold: NOT currently used';...
                };
            TutorialNotesAnswer=questdlg(Instructions,'Zach''s Hints!','Continue','Turn OFF Notes','Continue');
                if strcmp(TutorialNotesAnswer,'Turn OFF Notes')
                    TutorialNotes=0;
                end
        end
        for zzzz=1:1

            prompt = {  'QuaSOR_Mode 1/2/3',...
                        'StoreAllFitTests (1/0)',...
                        'SaveStacks (1/0)',...
                        'Reconstruct_Upscale_Fit_Stack (1/0)',...
                        'DisplayOn (1/0)',...
                        'DisplayFinal (1/0)',...
                        'DisplayRegionTracking (1/0)',...
                        'SaveIntermediates (1/0)',...
                        'MinimizeFigureWindow (1/0)',...
                        'MemorySaver (1/0)',...
                        'EventThreshold (# events to turn on MemorySaver)',...
                        'GBThreshold (GB)',...
                        };
            dlg_title = [StackSaveName,' Define QuaSOR_Parameters.General Settings'];
            num_lines = 1;
            def = {     num2str(QuaSOR_Parameters.QuaSOR_Mode),...
                        num2str(QuaSOR_Parameters.General.StoreAllFitTests),...
                        num2str(QuaSOR_Parameters.General.SaveStacks),...
                        num2str(QuaSOR_Parameters.General.Reconstruct_Upscale_Fit_Stack),...
                        num2str(QuaSOR_Parameters.General.DisplayOn),...
                        num2str(QuaSOR_Parameters.General.DisplayFinal),...
                        num2str(QuaSOR_Parameters.General.DisplayRegionTracking),...
                        num2str(QuaSOR_Parameters.General.SaveIntermediates),...
                        num2str(QuaSOR_Parameters.General.MinimizeFigureWindow),...
                        num2str(QuaSOR_Parameters.General.MemorySaver),...
                        num2str(QuaSOR_Parameters.General.EventThreshold),...
                        num2str(QuaSOR_Parameters.General.GBThreshold),...
                        };
            answer = inputdlgcolZN(prompt,dlg_title,num_lines,def,'on',2);
            QuaSOR_Parameters.QuaSOR_Mode=                          str2num(answer{1});
            QuaSOR_Parameters.General.StoreAllFitTests=             str2num(answer{2});
            QuaSOR_Parameters.General.SaveStacks=                   str2num(answer{3});
            QuaSOR_Parameters.General.Reconstruct_Upscale_Fit_Stack=str2num(answer{4});
            QuaSOR_Parameters.General.DisplayOn=                    str2num(answer{5});
            QuaSOR_Parameters.General.DisplayFinal=                 str2num(answer{6});
            QuaSOR_Parameters.General.DisplayRegionTracking=        str2num(answer{7});
            QuaSOR_Parameters.General.SaveIntermediates=            str2num(answer{8});
            QuaSOR_Parameters.General.MinimizeFigureWindow=         str2num(answer{9});
            QuaSOR_Parameters.General.MemorySaver=                  str2num(answer{10});
            QuaSOR_Parameters.General.EventThreshold=               str2num(answer{11});
            QuaSOR_Parameters.General.GBThreshold=                  str2num(answer{12});
            clear answer;
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        %Region
        if TutorialNotes
            Instructions={'QuaSOR Event Region Settings';...
                'Good QuaSOR fitting relies on having good ROIs that will allow the algorithm to fit a small number of Gaussian';...
                'functions at a time. But different conditions can change the amplitude and size of events so use these settings';...
                'to optimize the way that QuaSOR divides up each image that contains events';...
                'FixedROISize (1/0) Rarely used and only really useful with small number of spont events where you want all fit in the same ROI SIZE';...
                'RegionSize_um (if using fixed size) the length of square ROI side';...
                'RegionSplitting_Threshold: in DeltaF/F will help split events into their own ROIs';...
                'RegionSplitting_Threshold_Increase: in DeltaF/F if you go over the Max Region Area setting,';...
                '       I will increase the splitting threshold by this amount each iteration and repeat region splitting';...
                '       Until I no longer get the large event aggregates that are triggering the Max Region Area flag';...
                'Max_Region_Area_um2: Largest event ROI allowed';...
                'Min_Region_Area_um2: Filters out any ROIs with an area below this value';...
                'RegionEdge_Padding_um: How much to boost the ROIs beyond the active pixel range';...
                '       this must be balanced with the border suppression and take into consideration the region splitting threshold'
                '       with more agressive splitting thresholds you will erode the events edge pixels and thus you want to add them back';...
                '       but adding more back will pick up more neighbors so you can add more suppression if a problem';...
                'SuppressBorder (1/0): Helpful to suppress the apparent amplitude of pixels that are along the edges of each event ROI';...
                '       These areas meay contain edges of neighbor events that you do not want to contribute to the gaussian fit';...
                '       So suppressing makes the less visible';...
                'SuppressBorderSize_um: How much of the edge of each ROI to suppress the apparent amplitude of responses';...
                'SuppressBorderRatio: (0-1) How much to reduce the apparent amplidue of active pixels at the edge of the ROIs';...                
                'ScalePoint_Scalar: Used when converting from DeltaF/F pixel values to a point density representation, the larger the more amplitude detail but longer calculations';...
                'BoxAdjustment: pixels to reduce the size of the analysis ROI, probably leave 0 for now';...
                };
                TutorialNotesAnswer=questdlg(Instructions,'Zach''s Hints!','Continue','Turn OFF Notes','Continue');
                if strcmp(TutorialNotesAnswer,'Turn OFF Notes')
                    TutorialNotes=0;
                end
        end
        for zzzz=1:1
           prompt = {   'FixedROISize (1/0)',...
                        'RegionSize_um (if using fixed size)',...
                        'RegionSplitting_Threshold',...
                        'RegionSplitting_Threshold_Increase',...
                        'Max_Region_Area_um2',...
                        'Min_Region_Area_um2',...
                        'RegionEdge_Padding_um',...
                        'SuppressBorder (1/0)',...
                        'SuppressBorderSize_um',...
                        'SuppressBorderRatio',...
                        'ScalePoint_Scalar',...
                        'BoxAdjustment',...
                        };
            dlg_title = [StackSaveName,' Define QuaSOR_Parameters Region Settings'];
            num_lines = 1;
            def = {     num2str(QuaSOR_Parameters.Region.FixedROISize),...
                        num2str(QuaSOR_Parameters.Region.RegionSize_um2),...
                        num2str(QuaSOR_Parameters.Region.RegionSplitting_Threshold),...
                        num2str(QuaSOR_Parameters.Region.RegionSplitting_Threshold_Increase),...
                        num2str(QuaSOR_Parameters.Region.Max_Region_Area_um2),...
                        num2str(QuaSOR_Parameters.Region.Min_Region_Area_um2),...
                        num2str(QuaSOR_Parameters.Region.RegionEdge_Padding_um),...
                        num2str(QuaSOR_Parameters.Region.SuppressBorder),...
                        num2str(QuaSOR_Parameters.Region.SuppressBorderSize_um),...
                        num2str(QuaSOR_Parameters.Region.SuppressBorderRatio),...
                        num2str(QuaSOR_Parameters.General.ScalePoint_Scalar),...
                        num2str(QuaSOR_Parameters.General.BoxAdjustment),...
                        };
            answer = inputdlgcolZN(prompt,dlg_title,num_lines,def,'on',1);
            QuaSOR_Parameters.Region.FixedROISize=                      str2num(answer{1});
            QuaSOR_Parameters.Region.RegionSize_um2=                        str2num(answer{2});
            QuaSOR_Parameters.Region.RegionSplitting_Threshold=         str2num(answer{3});
            QuaSOR_Parameters.Region.RegionSplitting_Threshold_Increase=str2num(answer{4});
            QuaSOR_Parameters.Region.Max_Region_Area_um2=                   str2num(answer{5});
            QuaSOR_Parameters.Region.Min_Region_Area_um2=                   str2num(answer{6});
            QuaSOR_Parameters.Region.RegionEdge_Padding_um=                str2num(answer{7});
            QuaSOR_Parameters.Region.SuppressBorder=                    str2num(answer{8});
            QuaSOR_Parameters.Region.SuppressBorderSize_um=                str2num(answer{9});
            QuaSOR_Parameters.Region.SuppressBorderRatio=               str2num(answer{10});
            QuaSOR_Parameters.General.ScalePoint_Scalar=            str2num(answer{11});
            QuaSOR_Parameters.General.BoxAdjustment=                str2num(answer{12});
            clear answer;
            QuaSOR_Parameters.Region.RegionSize_px=...
                ceil(QuaSOR_Parameters.Region.RegionSize_um2/...
                (ImagingInfo.PixelSize^2));
            QuaSOR_Parameters.Region.RegionEdge_Padding=...
                ceil(QuaSOR_Parameters.Region.RegionEdge_Padding_um/...
                ImagingInfo.PixelSize);
            QuaSOR_Parameters.Region.SuppressBorderSize=...
                ceil(QuaSOR_Parameters.Region.SuppressBorderSize_um/...
                ImagingInfo.PixelSize);
            QuaSOR_Parameters.Region.Max_Region_Area_px2=...
                ceil(QuaSOR_Parameters.Region.Max_Region_Area_um2/...
                (ImagingInfo.PixelSize^2));
            QuaSOR_Parameters.Region.Min_Region_Area_px2=...
                ceil(QuaSOR_Parameters.Region.Min_Region_Area_um2/...
                (ImagingInfo.PixelSize^2));
            
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        %Components
        if TutorialNotes
            Instructions={'Components Settings';...
                'NumReplicates: How many test fits are performed, will increase with number of components aka number of gaussians';...
                'MaxNumGaussians: STARTING limit to the number of Gaussians/components that are able to be evaluated. with more replicates allowed this will go up';...
                'ReplicateIncrease: increase num replicates as the number of componentes increases to increase the likelihood of finding a good match when NO match is initially found';...
                'MaxAllowed_NumReplicates: Proper limit to number of repeat fit attempts per # Gaussian/Components';...
                'MaxAllowed_NumGaussians: Proper limit to number of Gaussians/components possible';...
                'MaxAllowed_NumResets: Proper limit to number of parameter resets possible';...
                'Repeat_Amp_Threshold: DeltaF/F One reason a particular set of fit attempts fails is a large region so we can increase the amp threshold remask the image to try to get spots to split into different ROIs';...
                'RunInParallelMode (1/0) NOT CURRENTLY USED';...
                        };
            TutorialNotesAnswer=questdlg(Instructions,'Zach''s Hints!','Continue','Turn OFF Notes','Continue');
                if strcmp(TutorialNotesAnswer,'Turn OFF Notes')
                    TutorialNotes=0;
                end
        end
        for zzzz=1:1
           prompt = {   'NumReplicates',...
                        'MaxNumGaussians',...
                        'ReplicateIncrease',...
                        'MaxAllowed_NumReplicates',...
                        'MaxAllowed_NumGaussians',...
                        'MaxAllowed_NumResets',...
                        'Repeat_Amp_Threshold (DF/F)',...
                        'RunInParallelMode (1/0)',...
                        };
            dlg_title = [StackSaveName,' Define QuaSOR_Parameters Region Settings'];
            num_lines = 1;
            def = {     num2str(QuaSOR_Parameters.Components.NumReplicates),...
                        num2str(QuaSOR_Parameters.Components.MaxNumGaussians),...
                        num2str(QuaSOR_Parameters.Components.ReplicateIncrease),...
                        num2str(QuaSOR_Parameters.Components.MaxAllowed_NumReplicates),...
                        num2str(QuaSOR_Parameters.Components.MaxAllowed_NumGaussians),...
                        num2str(QuaSOR_Parameters.Components.MaxAllowed_NumResets),...
                        num2str(QuaSOR_Parameters.Components.Repeat_Amp_Threshold),...
                        num2str(QuaSOR_Parameters.Components.RunInParallelMode),...
                        };
            answer = inputdlgcolZN(prompt,dlg_title,num_lines,def,'on',1);
            QuaSOR_Parameters.Components.NumReplicates=             str2num(answer{1});
            QuaSOR_Parameters.Components.MaxNumGaussians=           str2num(answer{2});
            QuaSOR_Parameters.Components.ReplicateIncrease=         str2num(answer{3});
            QuaSOR_Parameters.Components.MaxAllowed_NumReplicates=  str2num(answer{4});
            QuaSOR_Parameters.Components.MaxAllowed_NumGaussians=   str2num(answer{5});
            QuaSOR_Parameters.Components.MaxAllowed_NumResets=      str2num(answer{6});
            QuaSOR_Parameters.Components.Repeat_Amp_Threshold=      str2num(answer{7});
            QuaSOR_Parameters.Components.RunInParallelMode=         str2num(answer{8});
            clear answer;
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        %GMM
        if ~isfield(QuaSOR_Parameters.GMM,'Check_Prior_Frame_Fit_NumFrames')
            QuaSOR_Parameters.GMM.Check_Prior_Frame_Fit_NumFrames=1;
        end
        if TutorialNotes
            Instructions={'GMM Settings';...
                        'Check_Prior_Frame_Fit (1/0): NOT POSSIBLE CURRENTLY This can use the DF/F rather than the CorrAmp for fitting but has not been properly tested. It will look at the template response and if the peak happens in the previous X number of frames it will use that frames DeltaF/F data for QuaSOR';...
                        'Check_Prior_Frame_Limits: Are used with Check_Prior_Frame_Fit to check if the template peak occurs in previous frame(s) and uses that frmae to fit';...
                        'Check_Prior_Frame_Fit_NumFrames How many previous frames to check for peak';...
                        'FitFiltered (1/0) NOT RECOMMENDED but will filter the Event image prior to fitting to reduce noise. Probabaly too much filtering however so would not recommend';...
                        'TestFiltered (1/0) NOT RECOMMENDED Will evaluate the quality of the fit against filtered event image data. ';...
                        'PreFit_FilterSigma_um: Gaussian Sigma for the fit or test filter if using';...
                        'PreFit_FilterSize_um also for the fit or test fit filter';...
                        'MinDistance_um: IMPORTANT, sets a lower limit to how much distance there can be between the peaks of two Gaussian components with a fit test solution';...
                        'PenalizeMoreComponents (1/0) IMPORTANT if you want to prevent overfitting you can penalize the solutions with more components to bias simpler fit solutions';...
                        'NumCompPenalty: size of the component number pentalty. You could theoretically use a positive number here to reward more components but not recommended to do that';...
                        'ProbabilityTolerance: NOT altering but see HELP fitgmdist for details';...
                        'InternalReplicates how many replicates each fitgmdist call runs, it will pick the best fit from each run with the largest liklihood';...
                        'GMDistFitOptions.Display/GMDistFitOptions.MaxIterGMDistFitOptions.TolFun: NOT typically altering but see HELP fitgmdist for details';...
                        'StartCondition: prefer randSample but see HELP fitgmdist for details';...
                        'RegularizationValue see HELP fitgmdist for details';...
                        'Minimum_Peak_Amplitude: IMPORTANT will exclude any Gaussian fits who contain components with peak amplitude values less than this';...
                        'Minimum_Peak_Amplitude_EpisodeDelta: adjusts the Minimum_Peak_Amplitude relative to the Episode number, can be used to be more/less strict in much later episodes after bleaching';...
                        'Corr_Score_Scalar: IMPORTANT will adjust the max normxcorr2 between the TestImage and the FitImage when calculating a total score for each Gaussian fit solution';...
                        };
            TutorialNotesAnswer=questdlg(Instructions,'Zach''s Hints!','Continue','Turn OFF Notes','Continue');
                if strcmp(TutorialNotesAnswer,'Turn OFF Notes')
                    TutorialNotes=0;
                end
        end
        for zzzz=1:1
           prompt = {   'Check_Prior_Frame_Fit (1/0)',...
                        'Check_Prior_Frame_Limits(1)',...
                        'Check_Prior_Frame_Limits(2)',...
                        'Check_Prior_Frame_Fit_NumFrames',...
                        'FitFiltered (1/0)',...
                        'TestFiltered (1/0)',...
                        'PreFit_FilterSigma_um',...
                        'PreFit_FilterSize_um',...
                        'MinDistance_um',...
                        'PenalizeMoreComponents (1/0)',...
                        'NumCompPenalty',...
                        'ProbabilityTolerance',...
                        'InternalReplicates',...
                        'GMDistFitOptions.Display',...
                        'GMDistFitOptions.MaxIter',...
                        'GMDistFitOptions.TolFun',...
                        'StartCondition',...
                        'RegularizationValue',...
                        'Minimum_Peak_Amplitude (DF/F)',...
                        'Minimum_Peak_Amplitude_EpisodeDelta (+/- DF/F)',...
                        'Corr_Score_Scalar',...
                        };
            dlg_title = [StackSaveName,' Define QuaSOR_Parameters GMM Settings'];
            num_lines = 1;
            def = {     num2str(QuaSOR_Parameters.GMM.Check_Prior_Frame_Fit),...
                        num2str(QuaSOR_Parameters.GMM.Check_Prior_Frame_Limits(1)),...
                        num2str(QuaSOR_Parameters.GMM.Check_Prior_Frame_Limits(2)),...
                        num2str(QuaSOR_Parameters.GMM.Check_Prior_Frame_Fit_NumFrames),...
                        num2str(QuaSOR_Parameters.GMM.FitFiltered),...
                        num2str(QuaSOR_Parameters.GMM.TestFiltered),...
                        num2str(QuaSOR_Parameters.GMM.PreFit_FilterSigma_um),...
                        num2str(QuaSOR_Parameters.GMM.PreFit_FilterSize_um),...
                        num2str(QuaSOR_Parameters.GMM.MinDistance_um),...
                        num2str(QuaSOR_Parameters.GMM.PenalizeMoreComponents),...
                        num2str(QuaSOR_Parameters.GMM.NumCompPenalty),...
                        num2str(QuaSOR_Parameters.GMM.ProbabilityTolerance),...
                        num2str(QuaSOR_Parameters.GMM.InternalReplicates),...
                        QuaSOR_Parameters.GMM.GMDistFitOptions.Display,...
                        num2str(QuaSOR_Parameters.GMM.GMDistFitOptions.MaxIter),...
                        num2str(QuaSOR_Parameters.GMM.GMDistFitOptions.TolFun),...
                        QuaSOR_Parameters.GMM.StartCondition,...
                        num2str(QuaSOR_Parameters.GMM.RegularizationValue),...
                        num2str(QuaSOR_Parameters.GMM.Minimum_Peak_Amplitude),...
                        num2str(QuaSOR_Parameters.GMM.Minimum_Peak_Amplitude_EpisodeDelta),...
                        num2str(QuaSOR_Parameters.GMM.Corr_Score_Scalar),...
                        };
            answer = inputdlgcolZN(prompt,dlg_title,num_lines,def,'on',2);
            QuaSOR_Parameters.GMM.Check_Prior_Frame_Fit=                    str2num(answer{1});
            QuaSOR_Parameters.GMM.Check_Prior_Frame_Limits(1)=              str2num(answer{2});
            QuaSOR_Parameters.GMM.Check_Prior_Frame_Limits(2)=              str2num(answer{3});
            QuaSOR_Parameters.GMM.Check_Prior_Frame_Fit_NumFrames=          str2num(answer{4});
            QuaSOR_Parameters.GMM.FitFiltered=                              str2num(answer{5});
            QuaSOR_Parameters.GMM.TestFiltered=                             str2num(answer{6});
            QuaSOR_Parameters.GMM.PreFit_FilterSigma_um=                    str2num(answer{7});
            QuaSOR_Parameters.GMM.PreFit_FilterSize_um=                     str2num(answer{8});
            QuaSOR_Parameters.GMM.MinDistance_um=                           str2num(answer{9});
            QuaSOR_Parameters.GMM.PenalizeMoreComponents=                   str2num(answer{10});
            QuaSOR_Parameters.GMM.NumCompPenalty=                           str2num(answer{11});
            QuaSOR_Parameters.GMM.ProbabilityTolerance=                     str2num(answer{12});
            QuaSOR_Parameters.GMM.InternalReplicates=                       str2num(answer{13});
            QuaSOR_Parameters.GMM.GMDistFitOptions.Display=                 answer{14};
            QuaSOR_Parameters.GMM.GMDistFitOptions.MaxIter=                 str2num(answer{15});
            QuaSOR_Parameters.GMM.GMDistFitOptions.TolFun=                  str2num(answer{16});
            QuaSOR_Parameters.GMM.StartCondition=                           answer{17};
            QuaSOR_Parameters.GMM.RegularizationValue=                      str2num(answer{18});
            QuaSOR_Parameters.GMM.Minimum_Peak_Amplitude=                   str2num(answer{19});
            QuaSOR_Parameters.GMM.Minimum_Peak_Amplitude_EpisodeDelta=      str2num(answer{20});
            QuaSOR_Parameters.GMM.Corr_Score_Scalar=                        str2num(answer{21});
            clear answer;
            QuaSOR_Parameters.GMM.MinDistance=...
                ceil(QuaSOR_Parameters.GMM.MinDistance_um/...
                ImagingInfo.PixelSize);
            QuaSOR_Parameters.GMM.PreFit_FilterSize_px=...
                ceil(QuaSOR_Parameters.GMM.PreFit_FilterSize_um/...
                ImagingInfo.PixelSize);
            if rem(QuaSOR_Parameters.GMM.PreFit_FilterSize_px,2)==0
                QuaSOR_Parameters.GMM.PreFit_FilterSize_px=QuaSOR_Parameters.GMM.PreFit_FilterSize_px+1;
            end
            QuaSOR_Parameters.GMM.PreFit_FilterSigma_px=...
                QuaSOR_Parameters.GMM.PreFit_FilterSigma_um/...
                ImagingInfo.PixelSize;
        end   
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        if TutorialNotes
            Instructions={'Dist_Weights Settings';...
                'For the next few sets of parameters we are determining how to use a known set of Amplitudes as well as the Gaussian settings assosicated with a large set of test single events to calculate a score for the quality of the fit in order to make sure that the fit parameters are within actual event space.';...
                'Amp_Score: DeltaF/F';...
                'For the fit parameters we use the SIGMA matrix from the ouput of fitgmdist';...
                'Var_Score: is the mean of SIGMA(1,1) and SIGMA(2,2)';...
                'Var_Diff_Score is the difference between SIGMA(1,1) and SIGMA(2,2)';...
                'Cov_Score is SIGMA(1,2) (should be same as SIGMA(2,1)';...
                'For more information see HELP fitgmdist';...
                'I then calculate a score that is based on where the evaluating parameters sit in a normalized histogram of previously determined values';...
                'For each of these parameter sets there are the following options:';...
                'Score.Scalar: How much weight to use for the parameter, multiplied by the nearest bin in the norm hist';...
                'Score.Shift: Can shift the Norm_Hist values';...
                'Score.Hist_XData Score.Norm_Hist are calculated from an appropriate genotypes known good minis';...
                };
            TutorialNotesAnswer=questdlg(Instructions,'Zach''s Hints!','Continue','Turn OFF Notes','Continue');
                if strcmp(TutorialNotesAnswer,'Turn OFF Notes')
                    TutorialNotes=0;
                end
        end
        %Dist_Weights.Amp_Score
        for zzzz=1:1
            if length(QuaSOR_Parameters.Dist_Weights.Amp_Score.Hist_XData)>1
                QuaSOR_Parameters.Dist_Weights.Amp_Score.Hist_XData_String=[mat2str(QuaSOR_Parameters.Dist_Weights.Amp_Score.Hist_XData)];
            elseif length(QuaSOR_Parameters.Dist_Weights.Amp_Score.Hist_XData)==1
                QuaSOR_Parameters.Dist_Weights.Amp_Score.Hist_XData_String=['[',mat2str(QuaSOR_Parameters.Dist_Weights.Amp_Score.Hist_XData),']'];
            else
                QuaSOR_Parameters.Dist_Weights.Amp_Score.Hist_XData_String=['[]'];
            end
            if length(QuaSOR_Parameters.Dist_Weights.Amp_Score.Norm_Hist)>1
                QuaSOR_Parameters.Dist_Weights.Amp_Score.Norm_Hist_String=[mat2str(QuaSOR_Parameters.Dist_Weights.Amp_Score.Norm_Hist)];
            elseif length(QuaSOR_Parameters.Dist_Weights.Amp_Score.Norm_Hist)==1
                QuaSOR_Parameters.Dist_Weights.Amp_Score.Norm_Hist_String=['[',mat2str(QuaSOR_Parameters.Dist_Weights.Amp_Score.Norm_Hist),']'];
            else
                QuaSOR_Parameters.Dist_Weights.Amp_Score.Norm_Hist_String=['[]'];
            end
            prompt = {  'Amp_Score.Scalar',...
                        'Amp_Score.Shift',...
                        'Amp_Score.Hist_XData',...
                        'Amp_Score.Norm_Hist',...
                        };
            dlg_title = [StackSaveName,' Define QuaSOR_Parameters Amp_Score Settings'];
            num_lines = 1;
            def = {     num2str(QuaSOR_Parameters.Dist_Weights.Amp_Score.Scalar),...
                        num2str(QuaSOR_Parameters.Dist_Weights.Amp_Score.Shift),...
                        QuaSOR_Parameters.Dist_Weights.Amp_Score.Hist_XData_String,...
                        QuaSOR_Parameters.Dist_Weights.Amp_Score.Norm_Hist_String,...
                        };
            answer = inputdlgcolZN(prompt,dlg_title,num_lines,def,'on',1);
            QuaSOR_Parameters.Dist_Weights.Amp_Score.Scalar=        str2num(answer{1});
            QuaSOR_Parameters.Dist_Weights.Amp_Score.Shift=         str2num(answer{2});
            QuaSOR_Parameters.Dist_Weights.Amp_Score.Hist_XData=    String2Array_Fixed(answer{3});
            QuaSOR_Parameters.Dist_Weights.Amp_Score.Norm_Hist=     String2Array_Fixed(answer{4});
            clear answer;
        end        
        %Dist_Weights.Var_Score
        for zzzz=1:1
            if length(QuaSOR_Parameters.Dist_Weights.Var_Score.Hist_XData_um)>1
                QuaSOR_Parameters.Dist_Weights.Var_Score.Hist_XData_um_String=[mat2str(QuaSOR_Parameters.Dist_Weights.Var_Score.Hist_XData_um)];
            elseif length(QuaSOR_Parameters.Dist_Weights.Var_Score.Hist_XData_um)==1
                QuaSOR_Parameters.Dist_Weights.Var_Score.Hist_XData_um_String=['[',mat2str(QuaSOR_Parameters.Dist_Weights.Var_Score.Hist_XData_um),']'];
            else
                QuaSOR_Parameters.Dist_Weights.Var_Score.Hist_XData_um_String=['[]'];
            end
            if length(QuaSOR_Parameters.Dist_Weights.Var_Score.Norm_Hist)>1
                QuaSOR_Parameters.Dist_Weights.Var_Score.Norm_Hist_String=[mat2str(QuaSOR_Parameters.Dist_Weights.Var_Score.Norm_Hist)];
            elseif length(QuaSOR_Parameters.Dist_Weights.Var_Score.Norm_Hist)==1
                QuaSOR_Parameters.Dist_Weights.Var_Score.Norm_Hist_String=['[',mat2str(QuaSOR_Parameters.Dist_Weights.Var_Score.Norm_Hist),']'];
            else
                QuaSOR_Parameters.Dist_Weights.Var_Score.Norm_Hist_String=['[]'];
            end
            prompt = {  'Var_Score.Scalar',...
                        'Var_Score.Shift',...
                        'Var_Score.Hist_XData_um',...
                        'Var_Score.Norm_Hist',...
                        };
            dlg_title = [StackSaveName,' Define QuaSOR_Parameters Var_Score Settings'];
            num_lines = 1;
            def = {     num2str(QuaSOR_Parameters.Dist_Weights.Var_Score.Scalar),...
                        num2str(QuaSOR_Parameters.Dist_Weights.Var_Score.Shift),...
                        QuaSOR_Parameters.Dist_Weights.Var_Score.Hist_XData_um_String,...
                        QuaSOR_Parameters.Dist_Weights.Var_Score.Norm_Hist_String,...
                        };
            answer = inputdlgcolZN(prompt,dlg_title,num_lines,def,'on',1);
            QuaSOR_Parameters.Dist_Weights.Var_Score.Scalar=        str2num(answer{1});
            QuaSOR_Parameters.Dist_Weights.Var_Score.Shift=         str2num(answer{2});
            QuaSOR_Parameters.Dist_Weights.Var_Score.Hist_XData_um=    String2Array_Fixed(answer{3});
            QuaSOR_Parameters.Dist_Weights.Var_Score.Norm_Hist=     String2Array_Fixed(answer{4});
            clear answer;
        end
        %Dist_Weights.Var_Diff_Score
        for zzzz=1:1
            if length(QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Hist_XData_um)>1
                QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Hist_XData_um_String=[mat2str(QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Hist_XData_um)];
            elseif length(QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Hist_XData_um)==1
                QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Hist_XData_um_String=['[',mat2str(QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Hist_XData_um),']'];
            else
                QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Hist_XData_um_String=['[]'];
            end
            if length(QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Norm_Hist)>1
                QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Norm_Hist_String=[mat2str(QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Norm_Hist)];
            elseif length(QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Norm_Hist)==1
                QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Norm_Hist_String=['[',mat2str(QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Norm_Hist),']'];
            else
                QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Norm_Hist_String=['[]'];
            end
            prompt = {  'Var_Diff_Score.Scalar',...
                        'Var_Diff_Score.Shift',...
                        'Var_Diff_Score.Hist_XData_um',...
                        'Var_Diff_Score.Norm_Hist',...
                        };
            dlg_title = [StackSaveName,' Define QuaSOR_Parameters Var_Diff_Score Settings'];
            num_lines = 1;
            def = {     num2str(QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Scalar),...
                        num2str(QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Shift),...
                        QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Hist_XData_um_String,...
                        QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Norm_Hist_String,...
                        };
            answer = inputdlgcolZN(prompt,dlg_title,num_lines,def,'on',1);
            QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Scalar=        str2num(answer{1});
            QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Shift=         str2num(answer{2});
            QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Hist_XData_um=    String2Array_Fixed(answer{3});
            QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Norm_Hist=     String2Array_Fixed(answer{4});
            clear answer;
        end        
        %Dist_Weights.Cov_Score
        for zzzz=1:1
            if length(QuaSOR_Parameters.Dist_Weights.Cov_Score.Hist_XData_um)>1
                QuaSOR_Parameters.Dist_Weights.Cov_Score.Hist_XData_um_String=[mat2str(QuaSOR_Parameters.Dist_Weights.Cov_Score.Hist_XData_um)];
            elseif length(QuaSOR_Parameters.Dist_Weights.Cov_Score.Hist_XData_um)==1
                QuaSOR_Parameters.Dist_Weights.Cov_Score.Hist_XData_um_String=['[',mat2str(QuaSOR_Parameters.Dist_Weights.Cov_Score.Hist_XData_um),']'];
            else
                QuaSOR_Parameters.Dist_Weights.Cov_Score.Hist_XData_um_String=['[]'];
            end
            if length(QuaSOR_Parameters.Dist_Weights.Cov_Score.Norm_Hist)>1
                QuaSOR_Parameters.Dist_Weights.Cov_Score.Norm_Hist_String=[mat2str(QuaSOR_Parameters.Dist_Weights.Cov_Score.Norm_Hist)];
            elseif length(QuaSOR_Parameters.Dist_Weights.Cov_Score.Norm_Hist)==1
                QuaSOR_Parameters.Dist_Weights.Cov_Score.Norm_Hist_String=['[',mat2str(QuaSOR_Parameters.Dist_Weights.Cov_Score.Norm_Hist),']'];
            else
                QuaSOR_Parameters.Dist_Weights.Cov_Score.Norm_Hist_String=['[]'];
            end
            prompt = {  'Cov_Score.Scalar',...
                        'Cov_Score.Shift',...
                        'Cov_Score.Hist_XData_um',...
                        'Cov_Score.Norm_Hist',...
                        };
            dlg_title = [StackSaveName,' Define QuaSOR_Parameters Cov_Score Settings'];
            num_lines = 1;
            def = {     num2str(QuaSOR_Parameters.Dist_Weights.Cov_Score.Scalar),...
                        num2str(QuaSOR_Parameters.Dist_Weights.Cov_Score.Shift),...
                        QuaSOR_Parameters.Dist_Weights.Cov_Score.Hist_XData_um_String,...
                        QuaSOR_Parameters.Dist_Weights.Cov_Score.Norm_Hist_String,...
                        };
            answer = inputdlgcolZN(prompt,dlg_title,num_lines,def,'on',1);
            QuaSOR_Parameters.Dist_Weights.Cov_Score.Scalar=        str2num(answer{1});
            QuaSOR_Parameters.Dist_Weights.Cov_Score.Shift=         str2num(answer{2});
            QuaSOR_Parameters.Dist_Weights.Cov_Score.Hist_XData_um=    String2Array_Fixed(answer{3});
            QuaSOR_Parameters.Dist_Weights.Cov_Score.Norm_Hist=     String2Array_Fixed(answer{4});
            clear answer;
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        QuaSOR_Parameters.Dist_Weights.Var_Score.Hist_XData=...
            ceil(QuaSOR_Parameters.Dist_Weights.Var_Score.Hist_XData_um/...
            ImagingInfo.PixelSize);
        QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Hist_XData=...
            ceil(QuaSOR_Parameters.Dist_Weights.Var_Diff_Score.Hist_XData_um/...
            ImagingInfo.PixelSize);
        QuaSOR_Parameters.Dist_Weights.Cov_Score.Hist_XData=...
            ceil(QuaSOR_Parameters.Dist_Weights.Cov_Score.Hist_XData_um/...
            ImagingInfo.PixelSize);

        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        %UpScaling
        if TutorialNotes
            Instructions={  'UpScaling Settings';...
                            'QuaSOR_UpScaleFactor: Currently I have been only using 10 here but feel free to adjust';...
                            'ReMap_CoordinateAdjust: Corrects for the offset present when you convert the Gaussian max localizations from the small ROIs used for fitting and the overall image. Shouldnt make a huge difference anymore because the same adjustment is used for all coordinates';...
                            'UpScale_CoordinateAdjust: NOT currently used';...
                            'UpScaleMethod (nearest bicubic bilinear), how to rescale the lower res images';...
                            'XOffset and YOffset: NOT currently used but can apply a global offset to all QuaSOR Coordinates';...
                        };
            TutorialNotesAnswer=questdlg(Instructions,'Zach''s Hints!','Continue','Turn OFF Notes','Continue');
                if strcmp(TutorialNotesAnswer,'Turn OFF Notes')
                    TutorialNotes=0;
                end
        end
        for zzzz=1:1
           prompt = {   'QuaSOR_UpScaleFactor',...
                        'ReMap_CoordinateAdjust',...
                        'UpScale_CoordinateAdjust',...
                        'UpScaleMethod (nearest bicubic bilinear)',...
                        'XOffset',...
                        'YOffset',...
                        };
            dlg_title = [StackSaveName,' Define QuaSOR_Parameters UpScaling Settings'];
            num_lines = 1;
            def = {     num2str(QuaSOR_Parameters.UpScaling.QuaSOR_UpScaleFactor),...
                        num2str(QuaSOR_Parameters.UpScaling.ReMap_CoordinateAdjust),...
                        num2str(QuaSOR_Parameters.UpScaling.UpScale_CoordinateAdjust),...
                        QuaSOR_Parameters.UpScaling.UpScaleMethod,...
                        num2str(QuaSOR_Parameters.UpScaling.XOffset),...
                        num2str(QuaSOR_Parameters.UpScaling.YOffset),...
                        };
            answer = inputdlgcolZN(prompt,dlg_title,num_lines,def,'on',1);
            QuaSOR_Parameters.UpScaling.QuaSOR_UpScaleFactor=       str2num(answer{1});
            QuaSOR_Parameters.UpScaling.ReMap_CoordinateAdjust=     str2num(answer{2});
            QuaSOR_Parameters.UpScaling.UpScale_CoordinateAdjust=   str2num(answer{3});
            QuaSOR_Parameters.UpScaling.UpScaleMethod=              answer{4};
            QuaSOR_Parameters.UpScaling.XOffset=                    str2num(answer{5});
            QuaSOR_Parameters.UpScaling.YOffset=                    str2num(answer{6});
            clear answer;
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        if ~exist('QuaSOR_Map_Settings')
            QuaSOR_Map_Settings=[];
            Previous_QuaSOR_Map_Settings=0;
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        if ~isempty(QuaSOR_Map_Settings)
            Previous_QuaSOR_Map_Settings=1;
            ForceDefaultUpdateChoice = questdlg('QuaSOR_Map_Settings exist, Do you want to overwrite with defaults??',...
                'Overwrite QuaSOR_Map_Settings?','Overwrite','Skip',OverwriteAllDefault);
            if strcmp(ForceDefaultUpdateChoice,'Overwrite')
                ForceDefaultUpdate=1;
            elseif strcmp(ForceDefaultUpdateChoice,'Skip')
                ForceDefaultUpdate=0;
            end
        else
            ForceDefaultUpdate=1;
        end
        if ForceDefaultUpdate
            QuaSOR_Map_Settings=Default_QuaSOR_Map_Settings;
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        CheckingSettings=1;
        while CheckingSettings
            warning(['QuaSOR_Parameters.UpScaling.QuaSOR_UpScaleFactor = ',num2str(QuaSOR_Parameters.UpScaling.QuaSOR_UpScaleFactor)])
            warning(['Upscale Pixel Size = ',num2str((ScaleBar.ScaleFactor/QuaSOR_Parameters.UpScaling.QuaSOR_UpScaleFactor)*1000),'nm']);
            questdlg({'These Next Settings should factor in the current Upscaling factor:';...
                ['QuaSOR_Parameters.UpScaling.QuaSOR_UpScaleFactor = ',num2str(QuaSOR_Parameters.UpScaling.QuaSOR_UpScaleFactor)];...
                ['Upscale Pixel Size = ',num2str((ScaleBar.ScaleFactor/QuaSOR_Parameters.UpScaling.QuaSOR_UpScaleFactor)*1000),'nm']},...
                'Zach''s Hints!','Continue','Continue');
            if TutorialNotes
                Instructions={'QuaSOR_Map_Settings';...
                    'QuaSOR_Gaussian_Filter_SizeBuffer_um/QuaSOR_Gaussian_Filter_Sigmas_um/QuaSOR_Gaussian_Filter_Sizes';...
                    'when generating Gaussian filter kernels used during you need to provide the SIGMA and SIZE, I find it easiest to define SIGMA and let the size be automatically adjusted by this 2*ceil(QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sigmas(z)*2)+QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_SizeBuffer';...
                    'so either provide a single SizeBuffer value and a list of SIGMA values or two equal sized lists of Sigma and Sizes here';...
                    'ContrastEnhancements (0-1 Lower Stronger): provide a vector of however many default contrast enhanements to apply to the data automatically';...
                    'QuaSOR_TemporalColorizations (1/0 Rec 0) NOT USED Currently but the idea was to color the events by their timing within the dataset';...
                    'QuaSOR_Overlay_FilterIndex/QuaSOR_Overlay_ContrastIndex BOTH must an index for the relevant filter parameter and contrast parameter defined above when performing any overlay maps';...
                    'QuaSOR_Overlay_Color (single letter): color when overlying QuaSOR high res maps onto the low res or pixel max maps';...
                    'QuaSOR_Color_Scalar: how much color detail to include. smaller gives faster results, but larger is more detail';...
                    'QuaSOR_PixelSizeScalar; only scales the maps when displaying on computer screen, not used for actual maps'};
                TutorialNotesAnswer=questdlg(Instructions,'Zach''s Hints!','Continue','Turn OFF Notes','Continue');
                if strcmp(TutorialNotesAnswer,'Turn OFF Notes')
                    TutorialNotes=0;
                end
            end            
            if length(QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sigmas_um)>1
                QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sigmas_um_String=[mat2str(QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sigmas_um)];
            elseif length(QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sigmas_um)==1
                QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sigmas_um_String=['[',mat2str(QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sigmas_um),']'];
            else
                QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sigmas_um_String=['[]'];
            end
            if length(QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sizes)>1
                QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sizes_String=[mat2str(QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sizes)];
            elseif length(QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sizes)==1
                QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sizes_String=['[',mat2str(QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sizes),']'];
            else
                QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sizes_String=['[]'];
            end
            if length(QuaSOR_Map_Settings.ContrastEnhancements)>1
                QuaSOR_Map_Settings.ContrastEnhancements_String=[mat2str(QuaSOR_Map_Settings.ContrastEnhancements)];
            elseif length(QuaSOR_Map_Settings.ContrastEnhancements)==1
                QuaSOR_Map_Settings.ContrastEnhancements_String=['[',mat2str(QuaSOR_Map_Settings.ContrastEnhancements),']'];
            else
                QuaSOR_Map_Settings.ContrastEnhancements_String=['[]'];
            end
            if length(QuaSOR_Map_Settings.QuaSOR_TemporalColorizations)>1
                QuaSOR_Map_Settings.QuaSOR_TemporalColorizations_String=[mat2str(QuaSOR_Map_Settings.QuaSOR_TemporalColorizations)];
            elseif length(QuaSOR_Map_Settings.QuaSOR_TemporalColorizations)==1
                QuaSOR_Map_Settings.QuaSOR_TemporalColorizations_String=['[',mat2str(QuaSOR_Map_Settings.QuaSOR_TemporalColorizations),']'];
            else
                QuaSOR_Map_Settings.QuaSOR_TemporalColorizations_String=['[]'];
            end
            prompt = {  'QuaSOR_Gaussian_Filter_SizeBuffer_um (use to auto populate)',...
                        'QuaSOR_Gaussian_Filter_Sigmas_um',...
                        'QuaSOR_Gaussian_Filter_Sizes (empty to auto populate)',...
                        'ContrastEnhancements (0-1 Lower Stronger)',...
                        'QuaSOR_TemporalColorizations (1/0 Rec 0)',...
                        'QuaSOR_Overlay_FilterIndex',...
                        'QuaSOR_Overlay_ContrastIndex',...
                        'QuaSOR_Overlay_Color (single letter)',...
                        'QuaSOR_Color_Scalar',...
                        'QuaSOR_PixelSizeScalar'};
            dlg_title = [StackSaveName,' Define QuaSOR_Map_Settings'];
            num_lines = 1;
            def = {     num2str(QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_SizeBuffer_um),...
                        QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sigmas_um_String,...
                        QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sizes_String,...
                        QuaSOR_Map_Settings.ContrastEnhancements_String,...
                        QuaSOR_Map_Settings.QuaSOR_TemporalColorizations_String,...
                        num2str(QuaSOR_Map_Settings.QuaSOR_Overlay_FilterIndex),...
                        num2str(QuaSOR_Map_Settings.QuaSOR_Overlay_ContrastIndex),...
                        QuaSOR_Map_Settings.QuaSOR_Overlay_Color,...
                        num2str(QuaSOR_Map_Settings.QuaSOR_Color_Scalar),...
                        num2str(QuaSOR_Map_Settings.QuaSOR_PixelSizeScalar),...
                        };
            answer = inputdlgcolZN(prompt,dlg_title,num_lines,def,'on',1);
            QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_SizeBuffer_um=              str2num(answer{1});
            QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sigmas_um=       String2Array_Fixed(answer{2});
            QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sizes=        String2Array_Fixed(answer{3});
            QuaSOR_Map_Settings.ContrastEnhancements=                String2Array_Fixed(answer{4});
            QuaSOR_Map_Settings.QuaSOR_TemporalColorizations=        String2Array_Fixed(answer{5});
            QuaSOR_Map_Settings.QuaSOR_Overlay_FilterIndex=                     str2num(answer{6});
            QuaSOR_Map_Settings.QuaSOR_Overlay_ContrastIndex=                   str2num(answer{7});
            QuaSOR_Map_Settings.QuaSOR_Overlay_Color=                                  (answer{8});
            QuaSOR_Map_Settings.QuaSOR_Color_Scalar=                            str2num(answer{9});
            QuaSOR_Map_Settings.QuaSOR_PixelSizeScalar=                         str2num(answer{10});
            clear answer;
            QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_SizeBuffer=...
                ceil(QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_SizeBuffer_um/...
                (ImagingInfo.PixelSize/QuaSOR_Map_Settings.QuaSOR_UpScaleFactor));
            QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sigmas=...
                QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sigmas_um/...
                (ImagingInfo.PixelSize/QuaSOR_Map_Settings.QuaSOR_UpScaleFactor);
            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            
            if TutorialNotes
                Instructions={'QuaSOR_Map_Settings';...
                        'QuaSOR_Modality_Overlay_FilterIndex Filter setting when comparing Evoked/Mod1 and Spontaneous/Mod2 localizations';...
                        'QuaSOR_Modality_Overlay_ContrastIndices Mod 1/Modality_Colors Mod 1 For AP Evoked events';...
                        'QuaSOR_Modality_Overlay_ContrastIndices Mod 2/Modality_Colors Mod 2 For Spotaneous vents';...
                        'QuaSOR_HighResBoutonDilateRegionSize/QuaSOR_HighResBoutonDilateRegionSize2/QuaSOR_HighResBoutonErodeRegionSize are all used during the upscaling of AllBoutonsRegion from its original resolution to the QuaSOR HIGH Resolution and are provided in px';...
                        'SpotNormalization: HIGHLY Recommended. When generating any QuaSOR Maps the individual event gaussians should be normalized before adding to the overall map so pixel values in the map will actually represent event counts(ish)';...
                        'ExportColorMap: when exporting any simple QuaSOR Map this is the Colormap/Heatmap you would like to use. usually parula/jet';...
                        'Bouton_Region_Mask_Background_Color: gives color for the background where data is not present and thus masked off when making nice maps';...
                        };
                TutorialNotesAnswer=questdlg(Instructions,'Zach''s Hints!','Continue','Turn OFF Notes','Continue');
                if strcmp(TutorialNotesAnswer,'Turn OFF Notes')
                    TutorialNotes=0;
                end
            end            
            
            
            
            
            if length(QuaSOR_Map_Settings.Bouton_Region_Mask_Background_Color)>1
                QuaSOR_Map_Settings.Bouton_Region_Mask_Background_Color_String=[mat2str(QuaSOR_Map_Settings.Bouton_Region_Mask_Background_Color)];
            elseif length(QuaSOR_Map_Settings.Bouton_Region_Mask_Background_Color)==1
                QuaSOR_Map_Settings.Bouton_Region_Mask_Background_Color_String=['[',mat2str(QuaSOR_Map_Settings.Bouton_Region_Mask_Background_Color),']'];
            else
                QuaSOR_Map_Settings.Bouton_Region_Mask_Background_Color_String=['[]'];
            end
            prompt = {  'QuaSOR_Modality_Overlay_FilterIndex',...
                        'QuaSOR_Modality_Overlay_ContrastIndices Mod 1',...
                        'Modality_Colors Mod 1',...
                        'QuaSOR_Modality_Overlay_ContrastIndices Mod 2',...
                        'Modality_Colors Mod 2',...
                        'QuaSOR_HighResBoutonDilateRegionSize (px)',...
                        'QuaSOR_HighResBoutonDilateRegionSize2 (px)',...
                        'QuaSOR_HighResBoutonErodeRegionSize (px)',...
                        'SpotNormalization',...
                        'ExportColorMap',...
                        'Bouton_Region_Mask_Background_Color',...
                        };
            dlg_title = [StackSaveName,' Define QuaSOR_Map_Settings'];
            num_lines = 1;
            def = {     num2str(QuaSOR_Map_Settings.QuaSOR_Modality_Overlay_FilterIndex),...
                        num2str(QuaSOR_Map_Settings.QuaSOR_Modality_Overlay_ContrastIndices(1))...
                        QuaSOR_Map_Settings.Modality_Colors{1},...
                        num2str(QuaSOR_Map_Settings.QuaSOR_Modality_Overlay_ContrastIndices(2))...
                        QuaSOR_Map_Settings.Modality_Colors{2},...
                        num2str(QuaSOR_Map_Settings.QuaSOR_HighResBoutonDilateRegionSize),...
                        num2str(QuaSOR_Map_Settings.QuaSOR_HighResBoutonDilateRegionSize2),...
                        num2str(QuaSOR_Map_Settings.QuaSOR_HighResBoutonErodeRegionSize),...
                        num2str(QuaSOR_Map_Settings.SpotNormalization),...
                        QuaSOR_Map_Settings.ExportColorMap,...
                        QuaSOR_Map_Settings.Bouton_Region_Mask_Background_Color_String,...
                        };
            answer = inputdlgcolZN(prompt,dlg_title,num_lines,def,'on',1);
            QuaSOR_Map_Settings.QuaSOR_Modality_Overlay_FilterIndex=                      str2num(answer{1});
            QuaSOR_Map_Settings.QuaSOR_Modality_Overlay_ContrastIndices(1)=               str2num(answer{2});
            QuaSOR_Map_Settings.Modality_Colors{1}=                                               answer{3};
            QuaSOR_Map_Settings.QuaSOR_Modality_Overlay_ContrastIndices(2)=               str2num(answer{4});
            QuaSOR_Map_Settings.Modality_Colors{2}=                                               answer{5};
            QuaSOR_Map_Settings.QuaSOR_HighResBoutonDilateRegionSize=                     str2num(answer{6});
            QuaSOR_Map_Settings.QuaSOR_HighResBoutonDilateRegionSize2=                    str2num(answer{7});
            QuaSOR_Map_Settings.QuaSOR_HighResBoutonErodeRegionSize=                      str2num(answer{8});
            QuaSOR_Map_Settings.SpotNormalization=                                        str2num(answer{9});
            QuaSOR_Map_Settings.ExportColorMap=                                                   answer{10};
            QuaSOR_Map_Settings.Bouton_Region_Mask_Background_Color=           String2Array_Fixed(answer{11});
            clear answer;
            if QuaSOR_Map_Settings.SpotNormalization
                QuaSOR_Map_Settings.SpotNormalization=true;
            else
                QuaSOR_Map_Settings.SpotNormalization=false; 
            end
            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            if QuaSOR_Map_Settings.QuaSOR_Overlay_FilterIndex>length(QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sigmas_um)||...
                    QuaSOR_Map_Settings.QuaSOR_Overlay_ContrastIndex>length(QuaSOR_Map_Settings.ContrastEnhancements)||...
                    QuaSOR_Map_Settings.QuaSOR_Modality_Overlay_FilterIndex>length(QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sigmas_um)||...
                    any(QuaSOR_Map_Settings.QuaSOR_Modality_Overlay_ContrastIndices)>length(QuaSOR_Map_Settings.ContrastEnhancements)
                warning('Bad Filter or contrast Index Selection...try again...')
                CheckingSettings=1;
            else
                CheckingSettings=0;
            end
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        if ~exist('QuaSOR_LowRes_Map_Settings')
            QuaSOR_LowRes_Map_Settings=[];
            Previous_QuaSOR_LowRes_Map_Settings=0;
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        if ~isempty(QuaSOR_LowRes_Map_Settings)
            Previous_QuaSOR_LowRes_Map_Settings=1;
            ForceDefaultUpdateChoice = questdlg('QuaSOR_LowRes_Map_Settings exist, Do you want to overwrite with defaults??',...
                'Overwrite QuaSOR_LowRes_Map_Settings?','Overwrite','Skip',OverwriteAllDefault);
            if strcmp(ForceDefaultUpdateChoice,'Overwrite')
                ForceDefaultUpdate=1;
            elseif strcmp(ForceDefaultUpdateChoice,'Skip')
                ForceDefaultUpdate=0;
            end
        else
            ForceDefaultUpdate=1;
        end
        if ForceDefaultUpdate
            QuaSOR_LowRes_Map_Settings=Default_QuaSOR_LowRes_Map_Settings;
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        CheckingSettings=1;
        while CheckingSettings
            if TutorialNotes
                Instructions={'QuaSOR_LowRes_Map_Settings';...
                        'These are all similar to the main QuaSOR High res map settings that you just set in the previous input boxes';...
                        'The point with these settings is to also calculate maps where you have used a lower or no upscale factor (use 1) to';...
                        'the localizaiotns prior to generating the maps. Currently this is most useful for showing the effect of QuaSOR on the data';...
                        'QuaSOR_LowRes_UpScaleFactor';...
                        'QuaSOR_LowRes_Gaussian_Filter_SizeBuffer_um (use to auto populate)';...
                        'QuaSOR_LowRes_Gaussian_Filter_Sigmas_um';...
                        'QuaSOR_LowRes_Gaussian_Filter_Sizes (empty to auto populate)';...
                        'ContrastEnhancements (0-1 Lower Stronger)';...
                        'QuaSOR_LowRes_TemporalColorizations (1/0 Rec 0)';...
                        'QuaSOR_LowRes_Overlay_FilterIndex';...
                        'QuaSOR_LowRes_Overlay_ContrastIndex';...
                        'QuaSOR_LowRes_Overlay_Color (single letter)';...
                        'QuaSOR_LowRes_Color_Scalar';...
                        'QuaSOR_LowRes_PixelSizeScalar'};
                TutorialNotesAnswer=questdlg(Instructions,'Zach''s Hints!','Continue','Turn OFF Notes','Continue');
                if strcmp(TutorialNotesAnswer,'Turn OFF Notes')
                    TutorialNotes=0;
                end
            end
            if length(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sigmas_um)>1
                QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sigmas_um_String=[mat2str(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sigmas_um)];
            elseif length(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sigmas_um)==1
                QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sigmas_um_String=['[',mat2str(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sigmas_um),']'];
            else
                QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sigmas_um_String=['[]'];
            end
            if length(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sizes)>1
                QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sizes_String=[mat2str(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sizes)];
            elseif length(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sizes)==1
                QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sizes_String=['[',mat2str(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sizes),']'];
            else
                QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sizes_String=['[]'];
            end
            if length(QuaSOR_LowRes_Map_Settings.ContrastEnhancements)>1
                QuaSOR_LowRes_Map_Settings.ContrastEnhancements_String=[mat2str(QuaSOR_LowRes_Map_Settings.ContrastEnhancements)];
            elseif length(QuaSOR_LowRes_Map_Settings.ContrastEnhancements)==1
                QuaSOR_LowRes_Map_Settings.ContrastEnhancements_String=['[',mat2str(QuaSOR_LowRes_Map_Settings.ContrastEnhancements),']'];
            else
                QuaSOR_LowRes_Map_Settings.ContrastEnhancements_String=['[]'];
            end
            if length(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_TemporalColorizations)>1
                QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_TemporalColorizations_String=[mat2str(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_TemporalColorizations)];
            elseif length(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_TemporalColorizations)==1
                QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_TemporalColorizations_String=['[',mat2str(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_TemporalColorizations),']'];
            else
                QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_TemporalColorizations_String=['[]'];
            end
            prompt = {  'QuaSOR_LowRes_UpScaleFactor',...
                        'QuaSOR_LowRes_Gaussian_Filter_SizeBuffer_um (use to auto populate)',...
                        'QuaSOR_LowRes_Gaussian_Filter_Sigmas_um',...
                        'QuaSOR_LowRes_Gaussian_Filter_Sizes (empty to auto populate)',...
                        'ContrastEnhancements (0-1 Lower Stronger)',...
                        'QuaSOR_LowRes_TemporalColorizations (1/0 Rec 0)',...
                        'QuaSOR_LowRes_Overlay_FilterIndex',...
                        'QuaSOR_LowRes_Overlay_ContrastIndex',...
                        'QuaSOR_LowRes_Overlay_Color (single letter)',...
                        'QuaSOR_LowRes_Color_Scalar',...
                        'QuaSOR_LowRes_PixelSizeScalar'};
            dlg_title = [StackSaveName,' Define QuaSOR_LowRes_Map_Settings'];
            num_lines = 1;
            def = {     num2str(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_UpScaleFactor),...
                        num2str(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_SizeBuffer_um),...
                        QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sigmas_um_String,...
                        QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sizes_String,...
                        QuaSOR_LowRes_Map_Settings.ContrastEnhancements_String,...
                        QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_TemporalColorizations_String,...
                        num2str(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Overlay_FilterIndex),...
                        num2str(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Overlay_ContrastIndex),...
                        QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Overlay_Color,...
                        num2str(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Color_Scalar),...
                        num2str(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_PixelSizeScalar),...
                        };
            answer = inputdlgcolZN(prompt,dlg_title,num_lines,def,'on',1);
            QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_UpScaleFactor=                           str2num(answer{1});
            QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_SizeBuffer_um=              str2num(answer{2});
            QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sigmas_um=       String2Array_Fixed(answer{3});
            QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sizes=        String2Array_Fixed(answer{4});
            QuaSOR_LowRes_Map_Settings.ContrastEnhancements=                  String2Array_Fixed(answer{5});
            QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_TemporalColorizations=        String2Array_Fixed(answer{6});
            QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Overlay_FilterIndex=                     str2num(answer{7});
            QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Overlay_ContrastIndex=                   str2num(answer{8});
            QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Overlay_Color=                                  (answer{9});
            QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Color_Scalar=                            str2num(answer{10});
            QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_PixelSizeScalar=                         str2num(answer{11});
            clear answer;
            QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_SizeBuffer=...
                ceil(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_SizeBuffer_um/...
                (ImagingInfo.PixelSize/QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_UpScaleFactor));
            QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sigmas=...
                QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sigmas_um/...
                (ImagingInfo.PixelSize/QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_UpScaleFactor);
            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            if QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Overlay_FilterIndex>length(QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Gaussian_Filter_Sigmas_um)||...
                    QuaSOR_LowRes_Map_Settings.QuaSOR_LowRes_Overlay_ContrastIndex>length(QuaSOR_LowRes_Map_Settings.ContrastEnhancements)
                warning('Bad Filter or contrast Index Selection...try again...')
                CheckingSettings=1;
            else
                CheckingSettings=0;
            end
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        if ~exist('PixelMax_Map_Settings')
            PixelMax_Map_Settings=[];
            Previous_PixelMax_Map_Settings=0;
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        if ~isempty(PixelMax_Map_Settings)
            Previous_PixelMax_Map_Settings=1;
            ForceDefaultUpdateChoice = questdlg('PixelMax_Map_Settings exist, Do you want to overwrite with defaults??',...
                'Overwrite PixelMax_Map_Settings?','Overwrite','Skip',OverwriteAllDefault);
            if strcmp(ForceDefaultUpdateChoice,'Overwrite')
                ForceDefaultUpdate=1;
            elseif strcmp(ForceDefaultUpdateChoice,'Skip')
                ForceDefaultUpdate=0;
            end
        else
            ForceDefaultUpdate=1;
        end
        if ForceDefaultUpdate
            PixelMax_Map_Settings=Default_PixelMax_Map_Settings;
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        CheckingSettings=1;
        while CheckingSettings
            if TutorialNotes
                Instructions={'PixelMax_Map_Settings';...
                    'These are also similar settings to the QuaSOR and QuaSOR_Low_Res settings set above';...
                    'However the main difference is that these event localzations do not come from the QuaSOR Gaussian fits';...
                    'Rather they are determined by the local maxima pixel of the events immediately after the Event Detection';...
                    'Do note that this is the old method used in Peled et al., 2014 and Newman et al., 2017';...
                    'PixelMax_UpScaleFactor: Just leave as 1 b/c doesnt make sense to increase any more';...
                        'PixelMax_Gaussian_Filter_SizeBuffer_um (use to auto populate)';...
                        'PixelMax_Gaussian_Filter_Sigmas_um: provide array of options';...
                        'PixelMax_Gaussian_Filter_Sizes (empty to auto populate)';...
                        'ContrastEnhancements (0-1 Lower Stronger)';...
                        'PixelMax_TemporalColorizations (1/0 Rec 0)';...
                        'PixelMax_Overlay_FilterIndex';...
                        'PixelMax_Overlay_ContrastIndex';...
                        'PixelMax_Overlay_Color (single letter)';...
                        'PixelMax_Color_Scalar';...
                        'PixelMax_PixelSizeScalar'};
                TutorialNotesAnswer=questdlg(Instructions,'Zach''s Hints!','Continue','Turn OFF Notes','Continue');
                if strcmp(TutorialNotesAnswer,'Turn OFF Notes')
                    TutorialNotes=0;
                end
            end
            if length(PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sigmas_um)>1
                PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sigmas_um_String=[mat2str(PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sigmas_um)];
            elseif length(PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sigmas_um)==1
                PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sigmas_um_String=['[',mat2str(PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sigmas_um),']'];
            else
                PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sigmas_um_String=['[]'];
            end
            if length(PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sizes)>1
                PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sizes_String=[mat2str(PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sizes)];
            elseif length(PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sizes)==1
                PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sizes_String=['[',mat2str(PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sizes),']'];
            else
                PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sizes_String=['[]'];
            end
            if length(PixelMax_Map_Settings.ContrastEnhancements)>1
                PixelMax_Map_Settings.ContrastEnhancements_String=[mat2str(PixelMax_Map_Settings.ContrastEnhancements)];
            elseif length(PixelMax_Map_Settings.ContrastEnhancements)==1
                PixelMax_Map_Settings.ContrastEnhancements_String=['[',mat2str(PixelMax_Map_Settings.ContrastEnhancements),']'];
            else
                PixelMax_Map_Settings.ContrastEnhancements_String=['[]'];
            end
            if length(PixelMax_Map_Settings.PixelMax_TemporalColorizations)>1
                PixelMax_Map_Settings.PixelMax_TemporalColorizations_String=[mat2str(PixelMax_Map_Settings.PixelMax_TemporalColorizations)];
            elseif length(PixelMax_Map_Settings.PixelMax_TemporalColorizations)==1
                PixelMax_Map_Settings.PixelMax_TemporalColorizations_String=['[',mat2str(PixelMax_Map_Settings.PixelMax_TemporalColorizations),']'];
            else
                PixelMax_Map_Settings.PixelMax_TemporalColorizations_String=['[]'];
            end
            prompt = {  'PixelMax_UpScaleFactor',...
                        'PixelMax_Gaussian_Filter_SizeBuffer_um (use to auto populate)',...
                        'PixelMax_Gaussian_Filter_Sigmas_um',...
                        'PixelMax_Gaussian_Filter_Sizes (empty to auto populate)',...
                        'ContrastEnhancements (0-1 Lower Stronger)',...
                        'PixelMax_TemporalColorizations (1/0 Rec 0)',...
                        'PixelMax_Overlay_FilterIndex',...
                        'PixelMax_Overlay_ContrastIndex',...
                        'PixelMax_Overlay_Color (single letter)',...
                        'PixelMax_Color_Scalar',...
                        'PixelMax_PixelSizeScalar'};
            dlg_title = [StackSaveName,' Define PixelMax_Map_Settings'];
            num_lines = 1;
            def = {     num2str(PixelMax_Map_Settings.PixelMax_UpScaleFactor),...
                        num2str(PixelMax_Map_Settings.PixelMax_Gaussian_Filter_SizeBuffer_um),...
                        PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sigmas_um_String,...
                        PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sizes_String,...
                        PixelMax_Map_Settings.ContrastEnhancements_String,...
                        PixelMax_Map_Settings.PixelMax_TemporalColorizations_String,...
                        num2str(PixelMax_Map_Settings.PixelMax_Overlay_FilterIndex),...
                        num2str(PixelMax_Map_Settings.PixelMax_Overlay_ContrastIndex),...
                        PixelMax_Map_Settings.PixelMax_Overlay_Color,...
                        num2str(PixelMax_Map_Settings.PixelMax_Color_Scalar),...
                        num2str(PixelMax_Map_Settings.PixelMax_PixelSizeScalar),...
                        };
            answer = inputdlgcolZN(prompt,dlg_title,num_lines,def,'on',1);
            PixelMax_Map_Settings.PixelMax_UpScaleFactor=                           str2num(answer{1});
            PixelMax_Map_Settings.PixelMax_Gaussian_Filter_SizeBuffer_um=              str2num(answer{2});
            PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sigmas_um=       String2Array_Fixed(answer{3});
            PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sizes=        String2Array_Fixed(answer{4});
            PixelMax_Map_Settings.ContrastEnhancements=                  String2Array_Fixed(answer{5});
            PixelMax_Map_Settings.PixelMax_TemporalColorizations=        String2Array_Fixed(answer{6});
            PixelMax_Map_Settings.PixelMax_Overlay_FilterIndex=                     str2num(answer{7});
            PixelMax_Map_Settings.PixelMax_Overlay_ContrastIndex=                   str2num(answer{8});
            PixelMax_Map_Settings.PixelMax_Overlay_Color=                                  (answer{9});
            PixelMax_Map_Settings.PixelMax_Color_Scalar=                            str2num(answer{10});
            PixelMax_Map_Settings.PixelMax_PixelSizeScalar=                         str2num(answer{11});
            clear answer;
            PixelMax_Map_Settings.PixelMax_Gaussian_Filter_SizeBuffer=...
                ceil(PixelMax_Map_Settings.PixelMax_Gaussian_Filter_SizeBuffer_um/...
                (ImagingInfo.PixelSize/PixelMax_Map_Settings.PixelMax_UpScaleFactor));
            PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sigmas=...
                PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sigmas_um/...
                (ImagingInfo.PixelSize/PixelMax_Map_Settings.PixelMax_UpScaleFactor);

            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            if PixelMax_Map_Settings.PixelMax_Overlay_FilterIndex>length(PixelMax_Map_Settings.PixelMax_Gaussian_Filter_Sigmas_um)||...
                    PixelMax_Map_Settings.PixelMax_Overlay_ContrastIndex>length(PixelMax_Map_Settings.ContrastEnhancements)
                warning('Bad Filter or contrast Index Selection...try again...')
                CheckingSettings=1;
            else
                CheckingSettings=0;
            end
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        if ~exist('QuaSOR_Auto_AZ_Settings')
            QuaSOR_Auto_AZ_Settings=[];
            Previous_QuaSOR_Auto_AZ_Settings=0;
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        if ~isempty(QuaSOR_Auto_AZ_Settings)
            Previous_QuaSOR_Auto_AZ_Settings=1;
            ForceDefaultUpdateChoice = questdlg('QuaSOR_Auto_AZ_Settings exist, Do you want to overwrite with defaults??',...
                'Overwrite QuaSOR_Auto_AZ_Settings?','Overwrite','Skip',OverwriteAllDefault);
            if strcmp(ForceDefaultUpdateChoice,'Overwrite')
                ForceDefaultUpdate=1;
            elseif strcmp(ForceDefaultUpdateChoice,'Skip')
                ForceDefaultUpdate=0;
            end
        else
            ForceDefaultUpdate=1;
        end
        if ForceDefaultUpdate
            QuaSOR_Auto_AZ_Settings=Default_QuaSOR_Auto_AZ_Settings;
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        CheckingSettings=1;
        while CheckingSettings
            if TutorialNotes
                Instructions={'QuaSOR_Auto_AZ_Settings';...
                    'I can try to find some clusters of events aka preliminary active zones automatically using these settings';...
                    'Note that some settings can be adjusted between pooled coordinates and modality specific coordinates ie spont vs evoked';...
                    'AZ_Detect_Adaptive_Threshold (1/0): with this on the threshold for masking the QuaOSR maps prior to local maxima detection uses a threshold which is effetively two events within the AZ_Detect_Min_Event_Distance_um distance and can be useful to alllow for different filering settings without having to carefully adjust the manual threshold';...
                    'AZ_Threshold (empty if Adaptive On): the pixel value for the event density threshold that you would like to use as the masking threshold prior to AZ local maxima detection regardless of whether spotnormalization is active above this will work but you must be picking a relevant density value';...
                    'AZ_Detect_Min_Event_Distance_um: If adaptive thresholding is active this minimum distance will allow you to calculate a threshold for a given filtering sigma and two events present at this distance from each other.';...
                    'AZ_Detect_Gaussian_Index: the index for the gaussian filter sigma from above quasor filtering options that you would like to use to run a local maxima detection on';...
                    'AZ_Detect_Min_AZ_Distance_um: the minimum distance between two AZs possible, for any AZs within this distance the one with more events will remain while the weaker will be removed';...
                    'AutoMatch_AZ_Max_Dist_nm: When assigning all QuaSOR events to their appropriate AZ origin we use the nearest AZ unless all AZs are more than this distance away at which point the event will remain un-linked to an AZ location';...
                    'Auto_AZ_Quant_ROI_Radius_nm: size of a small circular ROI to use for quantifying properties and calculating traces';...
                    'AZ_Detect_Color (single letter): for plotting purposes only';...
                    'AZ_Map_Display_Contrast: just for display purposes ex. 0.5';...
                    'Auto_Detect_Method (1/2): option 1 uses imextendedmax to generate the mask while 2 uses imregionalmax to generate the mask, current recommendation is probably 2';...
                    'NumEventsRevertThresh: if AZ_Detect_Adaptive_Threshold is active fewer than this # of QuaSOR Localizations is present I will automaticallly set the min # events per AZ to 1'};
                TutorialNotesAnswer=questdlg(Instructions,'Zach''s Hints!','Continue','Turn OFF Notes','Continue');
                if strcmp(TutorialNotesAnswer,'Turn OFF Notes')
                    TutorialNotes=0;
                end
            end
            prompt = {  'AutoMatch_AZ_Max_Dist_nm';...
                        'AZ_Detect_Min_Event_Distance_um';...
                        'AZ_Detect_Gaussian_Index';...
                        'AZ_Detect_Min_AZ_Distance_um';...
                        'Auto_AZ_Quant_ROI_Radius_nm';...
                        'AZ_Detect_Color (single letter)';...
                        'AZ_Map_Display_Contrast';...
                        'Auto_Detect_Method (1/2)';...
                        'NumEventsRevertThresh'};
            dlg_title = [StackSaveName,' Define QuaSOR_Auto_AZ_Settings'];
            num_lines = 1;
            def = {     num2str(QuaSOR_Auto_AZ_Settings.AutoMatch_AZ_Max_Dist_nm),...
                        num2str(QuaSOR_Auto_AZ_Settings.AZ_Detect_Min_Event_Distance_um),...
                        num2str(QuaSOR_Auto_AZ_Settings.AZ_Detect_Gaussian_Index),...
                        num2str(QuaSOR_Auto_AZ_Settings.AZ_Detect_Min_AZ_Distance_um),...
                        num2str(QuaSOR_Auto_AZ_Settings.Auto_AZ_Quant_ROI_Radius_nm),...
                        QuaSOR_Auto_AZ_Settings.AZ_Detect_Color,...
                        num2str(QuaSOR_Auto_AZ_Settings.AZ_Map_Display_Contrast),...
                        num2str(QuaSOR_Auto_AZ_Settings.Auto_Detect_Method),...
                        num2str(QuaSOR_Auto_AZ_Settings.NumEventsRevertThresh),...
                        };
            answer = inputdlgcolZN(prompt,dlg_title,num_lines,def,'on',1);
            QuaSOR_Auto_AZ_Settings.AutoMatch_AZ_Max_Dist_nm=           str2num(answer{1});
            QuaSOR_Auto_AZ_Settings.AZ_Detect_Min_Event_Distance_um=    str2num(answer{2});
            QuaSOR_Auto_AZ_Settings.AZ_Detect_Gaussian_Index=           str2num(answer{3});
            QuaSOR_Auto_AZ_Settings.AZ_Detect_Min_AZ_Distance_um=       str2num(answer{4});
            QuaSOR_Auto_AZ_Settings.Auto_AZ_Quant_ROI_Radius_nm=      	str2num(answer{5});
            QuaSOR_Auto_AZ_Settings.AZ_Detect_Color=                            answer{6};
            QuaSOR_Auto_AZ_Settings.AZ_Map_Display_Contrast=            str2num(answer{7});
            QuaSOR_Auto_AZ_Settings.Auto_Detect_Method=                 str2num(answer{8});
            QuaSOR_Auto_AZ_Settings.NumEventsRevertThresh=              str2num(answer{9});
            clear answer;
            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            prompt = {  ['Pooled QuaSOR_Auto_AZ_Settings Label'],...
                        ['Pooled QuaSOR_Auto_AZ_Settings AZ_Detect_Adaptive_Threshold (1/0)'],...
                        ['Pooled QuaSOR_Auto_AZ_Settings AZ_Threshold (empty if Adaptive On)'],...
            dlg_title = [StackSaveName,' Define QuaSOR_Event_Extraction_Settings Pooled'];
            num_lines = 1;
            def = {     QuaSOR_Auto_AZ_Settings.Label,...
                        num2str(QuaSOR_Auto_AZ_Settings.AZ_Detect_Adaptive_Threshold),...
                        num2str(QuaSOR_Auto_AZ_Settings.AZ_Threshold),...
                        };
            answer = inputdlgcolZN(prompt,dlg_title,num_lines,def,'on',1);
            QuaSOR_Auto_AZ_Settings.Label=                            answer{1};
            QuaSOR_Auto_AZ_Settings.AZ_Detect_Adaptive_Threshold=     str2num(answer{2});
            QuaSOR_Auto_AZ_Settings.AZ_Threshold=                     str2num(answer{3});
            clear answer;
            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            for Mod=1:length(QuaSOR_Auto_AZ_Settings.Modality)          
                prompt = {  ['Mod',num2str(Mod),'  QuaSOR_Auto_AZ_Settings Label'],...
                            ['Mod',num2str(Mod),'  QuaSOR_Auto_AZ_Settings AZ_Detect_Adaptive_Threshold (1/0)'],...
                            ['Mod',num2str(Mod),'  QuaSOR_Auto_AZ_Settings AZ_Threshold (empty if Adaptive On)'],...
                            ['Mod',num2str(Mod),'  QuaSOR_Auto_AZ_Settings Auto_AZ_Quant_ROI_Radius_nm']};
                dlg_title = [StackSaveName,' Define QuaSOR_Event_Extraction_Settings Mod',num2str(Mod)];
                num_lines = 1;
                def = {     QuaSOR_Auto_AZ_Settings.Modality(Mod).Label,...
                            num2str(QuaSOR_Auto_AZ_Settings.Modality(Mod).AZ_Detect_Adaptive_Threshold),...
                            num2str(QuaSOR_Auto_AZ_Settings.Modality(Mod).AZ_Threshold),...
                            num2str(QuaSOR_Auto_AZ_Settings.Modality(Mod).Auto_AZ_Quant_ROI_Radius_nm),...
                            };
                answer = inputdlgcolZN(prompt,dlg_title,num_lines,def,'on',1);
                QuaSOR_Auto_AZ_Settings.Modality(Mod).Label=                            answer{1};
                QuaSOR_Auto_AZ_Settings.Modality(Mod).AZ_Detect_Adaptive_Threshold=     str2num(answer{2});
                QuaSOR_Auto_AZ_Settings.Modality(Mod).AZ_Threshold=                     str2num(answer{3});
                QuaSOR_Auto_AZ_Settings.Modality(Mod).Auto_AZ_Quant_ROI_Radius_nm=      str2num(answer{4});
                clear answer;
            end
            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            if QuaSOR_Auto_AZ_Settings.AZ_Detect_Gaussian_Index>length(QuaSOR_Map_Settings.QuaSOR_Gaussian_Filter_Sigmas_um)
                warning('Bad Filter Index Selection...try again...')
                CheckingSettings=1;
            else
                CheckingSettings=0;
            end
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        if ~exist('QuaSOR_Event_Extraction_Settings')
            QuaSOR_Event_Extraction_Settings=[];
            Previous_QuaSOR_Event_Extraction_Settings=0;
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        if ~isempty(QuaSOR_Event_Extraction_Settings)
            Previous_QuaSOR_Event_Extraction_Settings=1;
            ForceDefaultUpdateChoice = questdlg('QuaSOR_Event_Extraction_Settings exist, Do you want to overwrite with defaults??',...
                'Overwrite QuaSOR_Event_Extraction_Settings?','Overwrite','Skip',OverwriteAllDefault);
            if strcmp(ForceDefaultUpdateChoice,'Overwrite')
                ForceDefaultUpdate=1;
            elseif strcmp(ForceDefaultUpdateChoice,'Skip')
                ForceDefaultUpdate=0;
            end
        else
            ForceDefaultUpdate=1;
        end
        if ForceDefaultUpdate
            QuaSOR_Event_Extraction_Settings=Default_QuaSOR_Event_Extraction_Settings;
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        if TutorialNotes
            Instructions={'QuaSOR_Event_Extraction_Settings';...
                'PreTraceFrames and PostTraceFrames define the window around the event where I will extract a DF/F trace';...
                        'PrePeakFrames and PostPeakFrames are used when calculated average peak event amplitudes. the true peak amplitude is also calculated but this provides an alternative peak amplitude that may be less affected by a noisy DF/F trace';...
                        'RegionRadius_nm size of the circular ROI used for calculating DF/F traces'};
            TutorialNotesAnswer=questdlg(Instructions,'Zach''s Hints!','Continue','Turn OFF Notes','Continue');
                if strcmp(TutorialNotesAnswer,'Turn OFF Notes')
                    TutorialNotes=0;
                end
        end
        for zzzz=1:1            
            prompt = {  'PreTraceFrames',...
                        'PostTraceFrames',...
                        'PrePeakFrames',...
                        'PostPeakFrames',...
                        'RegionRadius_nm'};
            dlg_title = [StackSaveName,' Define QuaSOR_Event_Extraction_Settings'];
            num_lines = 1;
            def = {     num2str(QuaSOR_Event_Extraction_Settings.PreTraceFrames),...
                        num2str(QuaSOR_Event_Extraction_Settings.PostTraceFrames),...
                        num2str(QuaSOR_Event_Extraction_Settings.PrePeakFrames),...
                        num2str(QuaSOR_Event_Extraction_Settings.PostPeakFrames),...
                        num2str(QuaSOR_Event_Extraction_Settings.RegionRadius_nm)};
            answer = inputdlgcolZN(prompt,dlg_title,num_lines,def,'on',1);
            QuaSOR_Event_Extraction_Settings.PreTraceFrames=                           str2num(answer{1});
            QuaSOR_Event_Extraction_Settings.PostTraceFrames=              str2num(answer{2});
            QuaSOR_Event_Extraction_Settings.PrePeakFrames=                     str2num(answer{3});
            QuaSOR_Event_Extraction_Settings.PostPeakFrames=                   str2num(answer{4});
            QuaSOR_Event_Extraction_Settings.RegionRadius_nm=                   str2num(answer{5});
            clear answer;
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        % Display
        if TutorialNotes
            Instructions={'MOVIE Record Settings';...
                'Some simple settings for the QuaSOR export Movie that can be made at the end of this sector';...
                 'DilateRegion: when constructing the borderline you can dilate the ROI a little if you want. probably not needed';...
                'UseBorderLine (1/0)';...
                'BorderColor use letter';...
                'BorderLineAdjustment: can be used to adjust for misalignment of the LINE and the actual mask border that sometimes exists from Matlab display weirdness';...
                'MovieScaleFactor: Overall image scaling on monitor';...
                'MovieFPS: dont set too fast or wont be able to see anything';...
                'MovieQuality: 0-100, higher better quality but will take a little more space';...
                };
            TutorialNotesAnswer=questdlg(Instructions,'Zach''s Hints!','Continue','Turn OFF Notes','Continue');
                if strcmp(TutorialNotesAnswer,'Turn OFF Notes')
                    TutorialNotes=0;
                end
        end
        for zzzz=1:1
           prompt = {   'DilateRegion',...
                        'UseBorderLine',...
                        'BorderColor',...
                        'BorderLineAdjustment',...
                        'MovieScaleFactor',...
                        'MovieFPS ',...
                        'MovieQuality (1-100)',...
                        };
            dlg_title = [StackSaveName,' Define QuaSOR_Parameters Basic Display Settings'];
            num_lines = 1;
            def = {     num2str(QuaSOR_Parameters.Display.DilateRegion),...
                        num2str(QuaSOR_Parameters.Display.UseBorderLine),...
                        QuaSOR_Parameters.Display.BorderColor,...
                        num2str(QuaSOR_Parameters.Display.BorderLineAdjustment),...
                        num2str(QuaSOR_Parameters.Display.MovieScaleFactor),...
                        num2str(QuaSOR_Parameters.Display.MovieFPS),...
                        num2str(QuaSOR_Parameters.Display.MovieQuality),...
                        };
            answer = inputdlgcolZN(prompt,dlg_title,num_lines,def,'on',2);
            QuaSOR_Parameters.Display.DilateRegion=                 str2num(answer{1});
            QuaSOR_Parameters.Display.UseBorderLine=                str2num(answer{2});
            QuaSOR_Parameters.Display.BorderColor=                  answer{3};
            QuaSOR_Parameters.Display.BorderLineAdjustment=         str2num(answer{4});
            QuaSOR_Parameters.Display.MovieScaleFactor=             str2num(answer{5});
            QuaSOR_Parameters.Display.MovieFPS=                     str2num(answer{6});
            QuaSOR_Parameters.Display.MovieQuality=                 str2num(answer{7});
            clear answer;
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        ReSelectSettingsChoice = questdlg({StackSaveName;'Reset Settings?'},'Reset Settings?','Reset','Good','Good');
        if strcmp(ReSelectSettingsChoice,'Reset')
            SettingUpQuaSOR=1;
        elseif strcmp(ReSelectSettingsChoice,'Good')
            SettingUpQuaSOR=0;
        end
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    end
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %Make a high res scalebar
    ScaleBar_Upscale=ScaleBar;
    ScaleBar_Upscale.ScaleFactor=ScaleBar_Upscale.ScaleFactor/QuaSOR_Parameters.UpScaling.QuaSOR_UpScaleFactor;
    ScaleBar_Upscale.XCoordinate=ScaleBar_Upscale.XCoordinate*QuaSOR_Parameters.UpScaling.QuaSOR_UpScaleFactor;
    ScaleBar_Upscale.YCoordinate=ScaleBar_Upscale.YCoordinate*QuaSOR_Parameters.UpScaling.QuaSOR_UpScaleFactor;
    ScaleBar_Upscale.XData=ScaleBar_Upscale.XData*QuaSOR_Parameters.UpScaling.QuaSOR_UpScaleFactor;
    ScaleBar_Upscale.YData=ScaleBar_Upscale.YData*QuaSOR_Parameters.UpScaling.QuaSOR_UpScaleFactor;
    ScaleBar_Upscale.PixelLength=ScaleBar_Upscale.PixelLength*QuaSOR_Parameters.UpScaling.QuaSOR_UpScaleFactor;
    ScaleBar_Upscale.PixelWidth=ScaleBar_Upscale.PixelWidth*QuaSOR_Parameters.UpScaling.QuaSOR_UpScaleFactor;
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    warning on
    FileSuffix='_QuaSOR_Data.mat';
    fprintf(['Saving... ',StackSaveName,FileSuffix,'...']);
    if exist([CurrentScratchDir,dc,StackSaveName,FileSuffix])
        save([CurrentScratchDir,dc,StackSaveName,FileSuffix],'QuaSOR_Parameters','QuaSOR_Event_Extraction_Settings','ScaleBar_Upscale','-append')
    else
        save([CurrentScratchDir,dc,StackSaveName,FileSuffix],'QuaSOR_Parameters','QuaSOR_Event_Extraction_Settings','ScaleBar_Upscale')
    end
    fprintf('Finished!\n')
    %%%%%%%
    FileSuffix='_QuaSOR_Maps.mat';
    fprintf(['Saving... ',StackSaveName,FileSuffix,'...']);
    if exist([CurrentScratchDir,dc,StackSaveName,FileSuffix])
        save([CurrentScratchDir,dc,StackSaveName,FileSuffix],'QuaSOR_Map_Settings','QuaSOR_LowRes_Map_Settings','PixelMax_Map_Settings','ScaleBar_Upscale','-append')
    else
        save([CurrentScratchDir,dc,StackSaveName,FileSuffix],'QuaSOR_Map_Settings','QuaSOR_LowRes_Map_Settings','PixelMax_Map_Settings','ScaleBar_Upscale')
    end
    fprintf('Finished!\n')
    %%%%%%%
    FileSuffix='_QuaSOR_AZs.mat';
    fprintf(['Saving... ',StackSaveName,FileSuffix,'...']);
    if exist([CurrentScratchDir,dc,StackSaveName,FileSuffix])
        save([CurrentScratchDir,dc,StackSaveName,FileSuffix],'QuaSOR_Auto_AZ_Settings','ScaleBar_Upscale','-append')
    else
        save([CurrentScratchDir,dc,StackSaveName,FileSuffix],'QuaSOR_Auto_AZ_Settings','ScaleBar_Upscale')
    end
    fprintf('Finished!\n')
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
end




